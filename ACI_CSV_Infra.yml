---
- name: Playbook for Bring UP ACI Fabric
  hosts: "192.168.1.144"
  connection: local
  gather_facts: no
  
  
# ============================================================================================================================================================
# Import Fabric Configuration Files
# ============================================================================================================================================================

  vars:
    
    #config_file: "./Fabric01/ACI_fabric.yml"
    snapshot_tag: "1001" # must be set by AWX
    ansible_host: "192.168.1.144"
    username: "admin"
    password: "cisco123"
  tasks:



# ============================================================================================================================================================
# Take a snaphot of current configuration
# ============================================================================================================================================================

    - name: Create a Snapshot
      aci_config_snapshot:
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: present
        export_policy: config_backup
        max_count: 10
        description: Backups taken before new configs are applied.
        validate_certs: "false"
      delegate_to: localhost
      tags: always,snapshot


# ============================================================================================================================================================
# Switch Provisioning
# >> GUI >> Fabric > Fabric Membership
# ============================================================================================================================================================
    - name: import Switchs csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/switches.csv'
      #when: switchs is defined
      tags: switchs

    - name: Add fabric node
      aci_fabric_node:
        validate_certs: "false"
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        serial: "{{ item.serial }}"
        node_id: "{{ item.nodeId }}"
        switch: "{{ item.name }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: switchs
    
# ============================================================================================================================================================
# tenant  Provisioning
# Add new Tenant
# ============================================================================================================================================================
    - name: import tentant csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/tenant.csv'
      tags: tenant

    - name: Add a new tenant
      aci_tenant:
        validate_certs: "false"
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.name }}"
        description: "{{ item.description }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: tenant

# ============================================================================================================================================================
# VRF  Provisioning
# Add new VRF
# ============================================================================================================================================================
    - name: import vrf csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/vrf.csv'
      tags: vrf

    
    - name: Add a new VRF to a tenant
      aci_vrf:
        validate_certs: "false"
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        vrf: "{{ item.name }}"
        tenant: "{{ item.tenant }}"
        descr: "{{ item.description }}"
        policy_control_preference: enforced
        policy_control_direction: ingress
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vrf


# ============================================================================================================================================================
# AP  Provisioning
# Add new AP
# ============================================================================================================================================================

    - name: import ap csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/ap.csv'
      tags: ap 

    - name: Add a new AP
      aci_ap:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.name }}"
        description: "{{ item.description }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: ap


  

# ============================================================================================================================================================
# BD  & EPG & Provisioning
# Add new BD
# ============================================================================================================================================================
    - name: import bd-epg csv
     csv_to_facts:
       src: '{{ playbook_dir }}/Fabric01/bd-epg.csv'
     tags: bd-epg

# ============================================================================================================================================================
# BD  Provisioning
# Add new BD
# ============================================================================================================================================================

    - name: Add Bridge Domain
      aci_bd:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        bd: "BD_{{ item.vlanid }}"
        vrf: "{{ item.vrf }}"
        description : "{{ item.description }}"
        multi_dest : bd-flood
        l2_unknown_unicast : flood
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: bd-epg

# ============================================================================================================================================================
# EPG  Provisioning
# Add new EPG
# ============================================================================================================================================================


    - name: Add a new EPG
      aci_epg:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.ap }}"
        epg: "EPG_{{ item.vlanid }}"
        description: "{{ item.description }}"
        bd: "BD_{{ item.vlanid }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: bd-epg


# ============================================================================================================================================================
# VLAN Pool  Provisioning
# Add new Vlan pool
# ============================================================================================================================================================

    - name: import vlan and domain csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/vlandom.csv'
      tags: vlandom 

    - name: Add a new VLAN pool
      aci_vlan_pool:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        pool: "{{ item.poolname }}"
        pool_allocation_mode: "{{ item.alloc }}"
        description: "{{ item.description }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vlandom



    - name: Add a new VLAN encap block
      aci_vlan_pool_encap_block:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        pool: "{{ item.poolname }}"
        allocation_mode: "{{ item.allocmode }}" 
        pool_allocation_mode: "{{ item.alloc }}"
        block_start: "{{ item.start }}"
        block_end: "{{ item.end }}"
        block_name: "{{ item.block }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vlandom


# ============================================================================================================================================================
# physical & VMM Provisioning
# Add new domain name
# ============================================================================================================================================================

#    - name: import domain csv
#      csv_to_facts:
#        src: '{{ playbook_dir }}/Fabric01/domain.csv'
#      tags: domain 

#VMM DOMAIN creation
    - name: Add vmm Doms via REST
      aci_rest:
        hostname: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        path: /api/mo/uni.json
        method: post
        content: |
         {
           "vmmDomP": {
             "attributes": {
               "dn":"uni/vmmp-VMware/dom-{{ item.domname }}",
               "name":"{{ item.domname }}"
             },
             "children": [
               {
                 "infraRsVlanNs": {
                   "attributes": {
                     "tDn": "uni/infra/vlanns-{{ item.poolname }}-{{ item.alloc }}"
                   }
                 }
               },
               {
                 "vmmUsrAccP": {
                   "attributes": {
                     "annotation": "",
                     "descr": "",
                     "name": "VcenterCredential",
                     "nameAlias": "",
                     "ownerKey": "Kahina**33B",
                     "ownerTag": "",
                     "usr": "administrator@vsphere.local"
                   }
                 }
               },
               {
                 "vmmCtrlrP": {
                   "attributes": {
                     "hostOrIp": "192.168.1.163",
                     "dvsVersion": "6.5",
                     "name": "VcenterIP",
                     "rootContName": "DC4"
                   },
                   "children": [
                     {
                       "vmmRsAcc": {
                         "attributes": {
                           "annotation": "",
                           "tDn": "uni/vmmp-VMware/dom-DVSWITCHDOM/usracc-VcenterCredential"
                         }
                       }
                     }
                   ]
                 }
               }
             ]
           }
         }                       
      delegate_to: localhost
      when: ("{{ item.type }}" == "vmm")
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vlandom



# physical domain creation
    - name: Add a new physical domain
      aci_domain:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        domain: "{{ item.domname }}"
        domain_type: "{{ item.type }}"
        state: present
      delegate_to: localhost
      when: ("{{ item.type }}" == "phys")    
      loop: '{{ spreadsheet }}'  
      loop_control:
        pause: 1
      tags: vlandom

#Bind Vlan to physical domain

    - name: Bind a physical domain to VLAN pool
      aci_domain_to_vlan_pool:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        domain: "{{ item.domname }}"
        domain_type: "{{ item.type }}"
        pool: "{{ item.poolname }}"
        pool_allocation_mode: "{{ item.allocmode }}"
        state: present
      delegate_to: localhost
      when: ("{{ item.type }}" == "phys")    
      loop: '{{ spreadsheet }}'  
      loop_control:
        pause: 1
      tags: vlandom

# ============================================================================================================================================================
# AAEP provisionnibg
# Add AAEP
# ============================================================================================================================================================

    - name: import aep csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/aep.csv'
      tags: aep 

#Add AEP and bind it to vmm domain
    - name: Add AEP to VMM via REST
      aci_rest:
        hostname: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        path: /api/mo/uni.json
        method: post
        content: |
         {
           "infraAttEntityP": {
             "attributes": {
               "descr": "{{ item.description }}",
               "dn": "uni/infra/attentp-{{ item.name }}",
               "name": "{{ item.name }}",
             },
             "children": [
               {
                 "infraRsDomP": {
                   "attributes": {
                     "tDn": "uni/vmmp-VMware/dom-{{ item.domain }}"
                   }
                 }    
               }
             ]
           }
         }    
      delegate_to: localhost
      when: ("{{ item.type }}" == "vmm")
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: aep


#Add AEP and bind it to physical domain

    - name: Add AEP to physical via REST
      aci_rest:
        hostname: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        path: /api/mo/uni.json
        method: post
        content: |
         {
           "infraAttEntityP": {
             "attributes": {
               "descr": "{{ item.description }}",
               "dn": "uni/infra/attentp-{{ item.name }}",
               "name": "{{ item.name }}",
             },
             "children": [
               {
                 "infraRsDomP": {
                   "attributes": {
                     "tDn": "uni/phys-{{ item.domain }}"
                   }
                 }    
               }
             ]
           }
         }    
      delegate_to: localhost
      when: ("{{ item.type }}" == "phys")
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: aep
