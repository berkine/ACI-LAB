---
- name: Playbook for Bring UP ACI Fabric
  hosts: "192.168.1.144"
  connection: local
  gather_facts: no
  
  
# ============================================================================================================================================================
# Import Fabric Configuration Files
# ============================================================================================================================================================

  vars:
    
    #config_file: "./Fabric01/ACI_fabric.yml"
    snapshot_tag: "1001" # must be set by AWX
    ansible_host: "192.168.1.144"
    username: "admin"
    password: "cisco123"
  tasks:



# ============================================================================================================================================================
# Take a snaphot of current configuration
# ============================================================================================================================================================

    - name: Create a Snapshot
      aci_config_snapshot:
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        state: present
        export_policy: config_backup
        max_count: 10
        description: Backups taken before new configs are applied.
        validate_certs: "false"
      delegate_to: localhost
      tags: always,snapshot


# ============================================================================================================================================================
# Switch Provisioning
# >> GUI >> Fabric > Fabric Membership
# ============================================================================================================================================================
    - name: import Switchs csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/switches.csv'
      #when: switchs is defined
      tags: switchs

    - name: Add fabric node
      aci_fabric_node:
        validate_certs: "false"
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        serial: "{{ item.serial }}"
        node_id: "{{ item.nodeId }}"
        switch: "{{ item.name }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: switchs
    
# ============================================================================================================================================================
# tenant  Provisioning
# Add new Tenant
# ============================================================================================================================================================
    - name: import tentant csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/tenant.csv'
      tags: tenant

    - name: Add a new tenant
      aci_tenant:
        validate_certs: "false"
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.name }}"
        description: "{{ item.description }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: tenant

# ============================================================================================================================================================
# VRF  Provisioning
# Add new VRF
# ============================================================================================================================================================
    - name: import vrf csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/vrf.csv'
      tags: vrf

    
    - name: Add a new VRF to a tenant
      aci_vrf:
        validate_certs: "false"
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        vrf: "{{ item.name }}"
        tenant: "{{ item.tenant }}"
        descr: "{{ item.description }}"
        policy_control_preference: enforced
        policy_control_direction: ingress
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vrf

# ============================================================================================================================================================
# BD  Provisioning
# Add new BD
# ============================================================================================================================================================
    - name: import bd csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/bd.csv'
      tags: bd

    - name: Add Bridge Domain
      aci_bd:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        bd: "{{ item.name }}"
        vrf: "{{ item.vrf }}"
        description : "{{ item.description }}"
        multi_dest : bd-flood
        l2_unknown_unicast : flood
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: bd

# ============================================================================================================================================================
# AP  Provisioning
# Add new AP
# ============================================================================================================================================================

    - name: import ap csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/ap.csv'
      tags: ap 

    - name: Add a new AP
      aci_ap:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.name }}"
        description: "{{ item.description }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: ap


# ============================================================================================================================================================
# EPG  Provisioning
# Add new EPG
# ============================================================================================================================================================

    - name: import epg csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/epg.csv'
      tags: epg 

    - name: Add a new EPG
      aci_epg:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        tenant: "{{ item.tenant }}"
        ap: "{{ item.ap }}"
        epg: "{{ item.name }}"
        description: "{{ item.description }}"
        bd: "{{ item.bd }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: epg


# ============================================================================================================================================================
# VLAN Pool  Provisioning
# Add new Vlan pool
# ============================================================================================================================================================

    - name: import vlan csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/vlan.csv'
      tags: vlan 

    - name: Add a new VLAN pool
      aci_vlan_pool:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        pool: "{{ item.poolname }}"
        pool_allocation_mode: "{{ item.alloc }}"
        description: "{{ item.description }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vlan



    - name: Add a new VLAN encap block
      aci_vlan_pool_encap_block:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        pool: "{{ item.poolname }}"
        pool_allocation_mode: "{{ item.alloc }}"
        block_start: "{{ item.start }}"
        block_end: "{{ item.end }}"
        block_name: "{{ item.block }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      loop_control:
        pause: 1
      tags: vlan


# ============================================================================================================================================================
# physical & VMM Provisioning
# Add new domain name
# ============================================================================================================================================================

    - name: import domain csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/domain.csv'
      tags: domain 

    - name: Add vmm Doms via REST
      aci_rest:
        hostname: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        path: /api/mo/uni.json
        method: post
        content: |
          {"vmmDomP":{"attributes":{"dn":"uni/vmmp-VMware/dom-"{{ item.domname }}"","name":"{{ item.domname }}"}}}
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      when: '{{ item.type }}' == "vmm"
      loop_control:
        pause: 1
      tags: domain



# physical domain
    - name: Add a new physical domain
      aci_domain:
        validate_certs: no
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        domain: "{{ item.domname }}"
        domain_type: "{{ item.type }}"
        state: present
      delegate_to: localhost
      loop: '{{ spreadsheet }}'
      when: '{{ item.type }}' == "phys"      
      loop_control:
        pause: 1
      tags: domain



# ============================================================================================================================================================
# Bind Vlan to Domain
# Bind VMM & ohysical to Domain
# ============================================================================================================================================================
    - name: import bindingdom csv
      csv_to_facts:
        src: '{{ playbook_dir }}/Fabric01/bindingdom.csv'
      tags: bindingdom 

    - name: Bind a physical domain to VLAN pool
      aci_domain_to_vlan_pool:
        validate_certs: no
        output_level: debug
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        domain: "{{ item.domname }}"
        domain_type: "{{ item.type }}"
        pool: "{{ item.poolname }}"
        pool_allocation_mode: "{{ item.allocmode }}"
        state: present
      delegate_to: localhost
      loop_control:
        pause: 1
      tags: bindingdom

    - name: Bind a VMM domain to VLAN pool
      aci_domain_to_vlan_pool:
        validate_certs: no
        output_level: debug
        host: "{{ ansible_host }}"
        username: "{{ username }}"
        password: "{{ password }}"
        domain: "{{ item.domname }}"
        domain_type: "{{ item.type }}"
        pool: "{{ item.poolname }}"
        pool_allocation_mode: "{{ item.allocmode }}"
        vm_provider: "{{ item.provider }}"
        state: present
      delegate_to: localhost
      loop_control:
        pause: 1
      tags: bindingdom

